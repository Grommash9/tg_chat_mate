language: python

if: type = push

stages:
  - name: deploy
  - name: test

before_script:
  - sudo apt-get update
  - sudo apt-get install -y ssh sshpass curl

jobs:
  include:
    - stage: deploy
      script:
        - |
          echo "Deploying service on test server"
          sshpass -p $PIPELINE_SERVER_PASSWORD ssh -o StrictHostKeyChecking=no root@$PIPELINE_SERVER_IP_ADDRESS << ENDSSH
          cd /home
          git clone https://github.com/Grommash9/tg_chat_mate
          cd tg_chat_mate
          export DOMAIN=$PIPELINE_SERVER_IP_ADDRESS
          echo "DOMAIN=$PIPELINE_SERVER_IP_ADDRESS" >> .env
          echo "ISSUE_SSL=true" >> .env
          echo "MONGO_USERNAME=root" >> .env
          echo "MONGO_DATABASE=bot_support_db" >> .env
          echo "MONGO_PORT=27017" >> .env
          echo "MONGO_HOST=192.168.1.50" >> .env
          echo "BOT_TOKEN=$BOT_TOKEN" >> .env
          echo "MONGO_PASSWORD=$MONGO_PASSWORD" >> .env
          echo "LONG_GOOD_SECRET_KEY=$LONG_GOOD_SECRET_KEY" >> .env
          echo "ROOT_PASSWORD=$ROOT_PASSWORD" >> .env
          chmod +x install.sh
          ./install.sh
          ENDSSH
        - sleep 30
    - stage: test
      script:
        - echo "Running tests"
        - |
          response=$(curl -k -o /dev/null -s -w "%{http_code}\n" https://$PIPELINE_SERVER_IP_ADDRESS)
          if [ "$response" -eq 200 ]; then
            echo "Test Passed: HTTP Status 200 OK"
          else
            echo "Test Failed: HTTP Status $response"
            exit 1
          fi


after_success:
  - echo "All stages completed successfully, initiating cleanup."
  - |
    sshpass -p $PIPELINE_SERVER_PASSWORD ssh -o StrictHostKeyChecking=no root@$PIPELINE_SERVER_IP_ADDRESS << 'ENDSSH'
    cd /home/tg_chat_mate
    docker compose down
    docker system prune -a -f
    rm -r /home/tg_chat_mate

after_failure:
  - echo "A stage has failed, initiating cleanup."
  - |
    sshpass -p $PIPELINE_SERVER_PASSWORD ssh -o StrictHostKeyChecking=no root@$PIPELINE_SERVER_IP_ADDRESS << 'ENDSSH'
    cd /home/tg_chat_mate
    docker compose down
    docker system prune -a -f
    rm -r /home/tg_chat_mate